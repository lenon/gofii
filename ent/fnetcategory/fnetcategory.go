// Code generated by ent, DO NOT EDIT.

package fnetcategory

const (
	// Label holds the string label denoting the fnetcategory type in the database.
	Label = "fnet_category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeDocuments holds the string denoting the documents edge name in mutations.
	EdgeDocuments = "documents"
	// Table holds the table name of the fnetcategory in the database.
	Table = "fnet_categories"
	// DocumentsTable is the table that holds the documents relation/edge.
	DocumentsTable = "fnet_documents"
	// DocumentsInverseTable is the table name for the FnetDocument entity.
	// It exists in this package in order to avoid circular dependency with the "fnetdocument" package.
	DocumentsInverseTable = "fnet_documents"
	// DocumentsColumn is the table column denoting the documents relation/edge.
	DocumentsColumn = "category_id"
)

// Columns holds all SQL columns for fnetcategory fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
