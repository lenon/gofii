// Code generated by ent, DO NOT EDIT.

package fnetdocument

const (
	// Label holds the string label denoting the fnetdocument type in the database.
	Label = "fnet_document"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFnetID holds the string denoting the fnet_id field in the database.
	FieldFnetID = "fnet_id"
	// FieldAdditionalInformation holds the string denoting the additional_information field in the database.
	FieldAdditionalInformation = "additional_information"
	// FieldDocumentCategory holds the string denoting the document_category field in the database.
	FieldDocumentCategory = "document_category"
	// FieldDocumentStatus holds the string denoting the document_status field in the database.
	FieldDocumentStatus = "document_status"
	// FieldDocumentSubCategory1 holds the string denoting the document_sub_category1 field in the database.
	FieldDocumentSubCategory1 = "document_sub_category1"
	// FieldDocumentSubCategory2 holds the string denoting the document_sub_category2 field in the database.
	FieldDocumentSubCategory2 = "document_sub_category2"
	// FieldFundDescription holds the string denoting the fund_description field in the database.
	FieldFundDescription = "fund_description"
	// FieldHighPriority holds the string denoting the high_priority field in the database.
	FieldHighPriority = "high_priority"
	// FieldMarketName holds the string denoting the market_name field in the database.
	FieldMarketName = "market_name"
	// FieldReferenceDateFormat holds the string denoting the reference_date_format field in the database.
	FieldReferenceDateFormat = "reference_date_format"
	// FieldReferenceDate holds the string denoting the reference_date field in the database.
	FieldReferenceDate = "reference_date"
	// FieldReviewed holds the string denoting the reviewed field in the database.
	FieldReviewed = "reviewed"
	// FieldStatusDescription holds the string denoting the status_description field in the database.
	FieldStatusDescription = "status_description"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSubmissionDate holds the string denoting the submission_date field in the database.
	FieldSubmissionDate = "submission_date"
	// FieldSubmissionMethodDescription holds the string denoting the submission_method_description field in the database.
	FieldSubmissionMethodDescription = "submission_method_description"
	// FieldSubmissionMethod holds the string denoting the submission_method field in the database.
	FieldSubmissionMethod = "submission_method"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// Table holds the table name of the fnetdocument in the database.
	Table = "fnet_documents"
)

// Columns holds all SQL columns for fnetdocument fields.
var Columns = []string{
	FieldID,
	FieldFnetID,
	FieldAdditionalInformation,
	FieldDocumentCategory,
	FieldDocumentStatus,
	FieldDocumentSubCategory1,
	FieldDocumentSubCategory2,
	FieldFundDescription,
	FieldHighPriority,
	FieldMarketName,
	FieldReferenceDateFormat,
	FieldReferenceDate,
	FieldReviewed,
	FieldStatusDescription,
	FieldStatus,
	FieldSubmissionDate,
	FieldSubmissionMethodDescription,
	FieldSubmissionMethod,
	FieldVersion,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// FnetIDValidator is a validator for the "fnet_id" field. It is called by the builders before save.
	FnetIDValidator func(int) error
	// DocumentCategoryValidator is a validator for the "document_category" field. It is called by the builders before save.
	DocumentCategoryValidator func(string) error
	// DocumentStatusValidator is a validator for the "document_status" field. It is called by the builders before save.
	DocumentStatusValidator func(string) error
	// FundDescriptionValidator is a validator for the "fund_description" field. It is called by the builders before save.
	FundDescriptionValidator func(string) error
	// ReferenceDateFormatValidator is a validator for the "reference_date_format" field. It is called by the builders before save.
	ReferenceDateFormatValidator func(string) error
	// ReferenceDateValidator is a validator for the "reference_date" field. It is called by the builders before save.
	ReferenceDateValidator func(string) error
	// ReviewedValidator is a validator for the "reviewed" field. It is called by the builders before save.
	ReviewedValidator func(string) error
	// StatusDescriptionValidator is a validator for the "status_description" field. It is called by the builders before save.
	StatusDescriptionValidator func(string) error
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// SubmissionDateValidator is a validator for the "submission_date" field. It is called by the builders before save.
	SubmissionDateValidator func(string) error
	// SubmissionMethodDescriptionValidator is a validator for the "submission_method_description" field. It is called by the builders before save.
	SubmissionMethodDescriptionValidator func(string) error
	// SubmissionMethodValidator is a validator for the "submission_method" field. It is called by the builders before save.
	SubmissionMethodValidator func(string) error
	// VersionValidator is a validator for the "version" field. It is called by the builders before save.
	VersionValidator func(int) error
)
